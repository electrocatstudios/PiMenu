// Code generated by protoc-gen-go. DO NOT EDIT.
// source: screenservice.proto

package screenservice

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ScreenRequest struct {
	Line1                string   `protobuf:"bytes,1,opt,name=line1,proto3" json:"line1,omitempty"`
	Line2                string   `protobuf:"bytes,2,opt,name=line2,proto3" json:"line2,omitempty"`
	Line3                string   `protobuf:"bytes,3,opt,name=line3,proto3" json:"line3,omitempty"`
	Line4                string   `protobuf:"bytes,4,opt,name=line4,proto3" json:"line4,omitempty"`
	Line5                string   `protobuf:"bytes,5,opt,name=line5,proto3" json:"line5,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScreenRequest) Reset()         { *m = ScreenRequest{} }
func (m *ScreenRequest) String() string { return proto.CompactTextString(m) }
func (*ScreenRequest) ProtoMessage()    {}
func (*ScreenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_screenservice_6b6dcca06ebd346e, []int{0}
}
func (m *ScreenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScreenRequest.Unmarshal(m, b)
}
func (m *ScreenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScreenRequest.Marshal(b, m, deterministic)
}
func (dst *ScreenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScreenRequest.Merge(dst, src)
}
func (m *ScreenRequest) XXX_Size() int {
	return xxx_messageInfo_ScreenRequest.Size(m)
}
func (m *ScreenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ScreenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ScreenRequest proto.InternalMessageInfo

func (m *ScreenRequest) GetLine1() string {
	if m != nil {
		return m.Line1
	}
	return ""
}

func (m *ScreenRequest) GetLine2() string {
	if m != nil {
		return m.Line2
	}
	return ""
}

func (m *ScreenRequest) GetLine3() string {
	if m != nil {
		return m.Line3
	}
	return ""
}

func (m *ScreenRequest) GetLine4() string {
	if m != nil {
		return m.Line4
	}
	return ""
}

func (m *ScreenRequest) GetLine5() string {
	if m != nil {
		return m.Line5
	}
	return ""
}

type ScreenRequest_Timeout struct {
	ReturnScreen         string   `protobuf:"bytes,1,opt,name=returnScreen,proto3" json:"returnScreen,omitempty"`
	Length               int32    `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
	ShowCountdown        int32    `protobuf:"varint,3,opt,name=showCountdown,proto3" json:"showCountdown,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScreenRequest_Timeout) Reset()         { *m = ScreenRequest_Timeout{} }
func (m *ScreenRequest_Timeout) String() string { return proto.CompactTextString(m) }
func (*ScreenRequest_Timeout) ProtoMessage()    {}
func (*ScreenRequest_Timeout) Descriptor() ([]byte, []int) {
	return fileDescriptor_screenservice_6b6dcca06ebd346e, []int{0, 0}
}
func (m *ScreenRequest_Timeout) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScreenRequest_Timeout.Unmarshal(m, b)
}
func (m *ScreenRequest_Timeout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScreenRequest_Timeout.Marshal(b, m, deterministic)
}
func (dst *ScreenRequest_Timeout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScreenRequest_Timeout.Merge(dst, src)
}
func (m *ScreenRequest_Timeout) XXX_Size() int {
	return xxx_messageInfo_ScreenRequest_Timeout.Size(m)
}
func (m *ScreenRequest_Timeout) XXX_DiscardUnknown() {
	xxx_messageInfo_ScreenRequest_Timeout.DiscardUnknown(m)
}

var xxx_messageInfo_ScreenRequest_Timeout proto.InternalMessageInfo

func (m *ScreenRequest_Timeout) GetReturnScreen() string {
	if m != nil {
		return m.ReturnScreen
	}
	return ""
}

func (m *ScreenRequest_Timeout) GetLength() int32 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *ScreenRequest_Timeout) GetShowCountdown() int32 {
	if m != nil {
		return m.ShowCountdown
	}
	return 0
}

type ScreenResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScreenResponse) Reset()         { *m = ScreenResponse{} }
func (m *ScreenResponse) String() string { return proto.CompactTextString(m) }
func (*ScreenResponse) ProtoMessage()    {}
func (*ScreenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_screenservice_6b6dcca06ebd346e, []int{1}
}
func (m *ScreenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScreenResponse.Unmarshal(m, b)
}
func (m *ScreenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScreenResponse.Marshal(b, m, deterministic)
}
func (dst *ScreenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScreenResponse.Merge(dst, src)
}
func (m *ScreenResponse) XXX_Size() int {
	return xxx_messageInfo_ScreenResponse.Size(m)
}
func (m *ScreenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ScreenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ScreenResponse proto.InternalMessageInfo

func (m *ScreenResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ScreenResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*ScreenRequest)(nil), "screenservice.ScreenRequest")
	proto.RegisterType((*ScreenRequest_Timeout)(nil), "screenservice.ScreenRequest.Timeout")
	proto.RegisterType((*ScreenResponse)(nil), "screenservice.ScreenResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ScreenServerClient is the client API for ScreenServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ScreenServerClient interface {
	SendScreen(ctx context.Context, in *ScreenRequest, opts ...grpc.CallOption) (*ScreenResponse, error)
}

type screenServerClient struct {
	cc *grpc.ClientConn
}

func NewScreenServerClient(cc *grpc.ClientConn) ScreenServerClient {
	return &screenServerClient{cc}
}

func (c *screenServerClient) SendScreen(ctx context.Context, in *ScreenRequest, opts ...grpc.CallOption) (*ScreenResponse, error) {
	out := new(ScreenResponse)
	err := c.cc.Invoke(ctx, "/screenservice.ScreenServer/SendScreen", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ScreenServerServer is the server API for ScreenServer service.
type ScreenServerServer interface {
	SendScreen(context.Context, *ScreenRequest) (*ScreenResponse, error)
}

func RegisterScreenServerServer(s *grpc.Server, srv ScreenServerServer) {
	s.RegisterService(&_ScreenServer_serviceDesc, srv)
}

func _ScreenServer_SendScreen_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScreenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScreenServerServer).SendScreen(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/screenservice.ScreenServer/SendScreen",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScreenServerServer).SendScreen(ctx, req.(*ScreenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ScreenServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "screenservice.ScreenServer",
	HandlerType: (*ScreenServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendScreen",
			Handler:    _ScreenServer_SendScreen_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "screenservice.proto",
}

func init() { proto.RegisterFile("screenservice.proto", fileDescriptor_screenservice_6b6dcca06ebd346e) }

var fileDescriptor_screenservice_6b6dcca06ebd346e = []byte{
	// 251 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0xd1, 0xb1, 0x4e, 0xc3, 0x30,
	0x10, 0x06, 0x60, 0x02, 0xa4, 0x15, 0xa7, 0x86, 0xc1, 0x20, 0x64, 0x55, 0x20, 0xa1, 0x88, 0x81,
	0xa9, 0x12, 0x49, 0xfb, 0x02, 0x30, 0xb2, 0x25, 0x6c, 0x4c, 0xa5, 0xfd, 0xd5, 0x46, 0xb4, 0x76,
	0xf1, 0xd9, 0xcd, 0x3b, 0xf3, 0x14, 0x88, 0xc4, 0x56, 0xe4, 0xa1, 0xe3, 0xff, 0x45, 0xf2, 0xfd,
	0x77, 0xa1, 0x1b, 0x5e, 0x19, 0x40, 0x31, 0xcc, 0xb1, 0x59, 0x61, 0x76, 0x30, 0xda, 0x6a, 0x91,
	0x45, 0x98, 0xff, 0x26, 0x94, 0xd5, 0x9d, 0x54, 0xf8, 0x71, 0x60, 0x2b, 0x6e, 0x29, 0xdd, 0x35,
	0x0a, 0x2f, 0x32, 0x79, 0x4c, 0x9e, 0xaf, 0xaa, 0x3e, 0x04, 0x2d, 0xe4, 0xf9, 0xa0, 0x45, 0xd0,
	0x52, 0x5e, 0x0c, 0x5a, 0x06, 0x9d, 0xcb, 0xcb, 0x41, 0xe7, 0x41, 0x17, 0x32, 0x1d, 0x74, 0x31,
	0xfd, 0xa6, 0xf1, 0x47, 0xb3, 0x87, 0x76, 0x56, 0xe4, 0x34, 0x31, 0xb0, 0xce, 0xa8, 0xbe, 0x8f,
	0x9f, 0x1f, 0x99, 0xb8, 0xa3, 0xd1, 0x0e, 0x6a, 0x63, 0xb7, 0x5d, 0x8f, 0xb4, 0xf2, 0x49, 0x3c,
	0x51, 0xc6, 0x5b, 0xdd, 0xbe, 0x69, 0xa7, 0xec, 0x5a, 0xb7, 0xaa, 0x2b, 0x94, 0x56, 0x31, 0xe6,
	0xaf, 0x74, 0x1d, 0x76, 0xe5, 0x83, 0x56, 0x8c, 0xff, 0xf7, 0xd8, 0x2e, 0xad, 0x63, 0x3f, 0xcd,
	0x27, 0x21, 0x69, 0xbc, 0x07, 0xf3, 0x72, 0x03, 0xbf, 0x70, 0x88, 0xc5, 0x27, 0x4d, 0xfa, 0x37,
	0x6a, 0x98, 0x23, 0x8c, 0x78, 0x27, 0xaa, 0xa1, 0xd6, 0xbe, 0xdf, 0xfd, 0x2c, 0xbe, 0x79, 0x74,
	0xda, 0xe9, 0xc3, 0x89, 0xaf, 0x7d, 0x99, 0xfc, 0xec, 0x6b, 0xd4, 0xfd, 0xa3, 0xf2, 0x2f, 0x00,
	0x00, 0xff, 0xff, 0x91, 0x6e, 0x31, 0x6e, 0xba, 0x01, 0x00, 0x00,
}
