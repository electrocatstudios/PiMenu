// Code generated by protoc-gen-go. DO NOT EDIT.
// source: screenservice.proto

package screenservice

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Line struct {
	LineType             string   `protobuf:"bytes,1,opt,name=line_type,json=lineType,proto3" json:"line_type,omitempty"`
	LineValue            string   `protobuf:"bytes,2,opt,name=line_value,json=lineValue,proto3" json:"line_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Line) Reset()         { *m = Line{} }
func (m *Line) String() string { return proto.CompactTextString(m) }
func (*Line) ProtoMessage()    {}
func (*Line) Descriptor() ([]byte, []int) {
	return fileDescriptor_screenservice_c2d3bde5b6b2abe7, []int{0}
}
func (m *Line) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Line.Unmarshal(m, b)
}
func (m *Line) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Line.Marshal(b, m, deterministic)
}
func (dst *Line) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Line.Merge(dst, src)
}
func (m *Line) XXX_Size() int {
	return xxx_messageInfo_Line.Size(m)
}
func (m *Line) XXX_DiscardUnknown() {
	xxx_messageInfo_Line.DiscardUnknown(m)
}

var xxx_messageInfo_Line proto.InternalMessageInfo

func (m *Line) GetLineType() string {
	if m != nil {
		return m.LineType
	}
	return ""
}

func (m *Line) GetLineValue() string {
	if m != nil {
		return m.LineValue
	}
	return ""
}

type Timeout struct {
	Length               int32    `protobuf:"varint,1,opt,name=length,proto3" json:"length,omitempty"`
	Showtimeout          int32    `protobuf:"varint,2,opt,name=showtimeout,proto3" json:"showtimeout,omitempty"`
	Returnscreen         string   `protobuf:"bytes,3,opt,name=returnscreen,proto3" json:"returnscreen,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Timeout) Reset()         { *m = Timeout{} }
func (m *Timeout) String() string { return proto.CompactTextString(m) }
func (*Timeout) ProtoMessage()    {}
func (*Timeout) Descriptor() ([]byte, []int) {
	return fileDescriptor_screenservice_c2d3bde5b6b2abe7, []int{1}
}
func (m *Timeout) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Timeout.Unmarshal(m, b)
}
func (m *Timeout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Timeout.Marshal(b, m, deterministic)
}
func (dst *Timeout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Timeout.Merge(dst, src)
}
func (m *Timeout) XXX_Size() int {
	return xxx_messageInfo_Timeout.Size(m)
}
func (m *Timeout) XXX_DiscardUnknown() {
	xxx_messageInfo_Timeout.DiscardUnknown(m)
}

var xxx_messageInfo_Timeout proto.InternalMessageInfo

func (m *Timeout) GetLength() int32 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *Timeout) GetShowtimeout() int32 {
	if m != nil {
		return m.Showtimeout
	}
	return 0
}

func (m *Timeout) GetReturnscreen() string {
	if m != nil {
		return m.Returnscreen
	}
	return ""
}

type Command struct {
	Commandtype          string   `protobuf:"bytes,1,opt,name=commandtype,proto3" json:"commandtype,omitempty"`
	Commandvalue         string   `protobuf:"bytes,2,opt,name=commandvalue,proto3" json:"commandvalue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Command) Reset()         { *m = Command{} }
func (m *Command) String() string { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()    {}
func (*Command) Descriptor() ([]byte, []int) {
	return fileDescriptor_screenservice_c2d3bde5b6b2abe7, []int{2}
}
func (m *Command) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Command.Unmarshal(m, b)
}
func (m *Command) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Command.Marshal(b, m, deterministic)
}
func (dst *Command) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command.Merge(dst, src)
}
func (m *Command) XXX_Size() int {
	return xxx_messageInfo_Command.Size(m)
}
func (m *Command) XXX_DiscardUnknown() {
	xxx_messageInfo_Command.DiscardUnknown(m)
}

var xxx_messageInfo_Command proto.InternalMessageInfo

func (m *Command) GetCommandtype() string {
	if m != nil {
		return m.Commandtype
	}
	return ""
}

func (m *Command) GetCommandvalue() string {
	if m != nil {
		return m.Commandvalue
	}
	return ""
}

type Touch struct {
	X                    int32    `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y                    int32    `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	Width                int32    `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height               int32    `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	Command              *Command `protobuf:"bytes,5,opt,name=command,proto3" json:"command,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Touch) Reset()         { *m = Touch{} }
func (m *Touch) String() string { return proto.CompactTextString(m) }
func (*Touch) ProtoMessage()    {}
func (*Touch) Descriptor() ([]byte, []int) {
	return fileDescriptor_screenservice_c2d3bde5b6b2abe7, []int{3}
}
func (m *Touch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Touch.Unmarshal(m, b)
}
func (m *Touch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Touch.Marshal(b, m, deterministic)
}
func (dst *Touch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Touch.Merge(dst, src)
}
func (m *Touch) XXX_Size() int {
	return xxx_messageInfo_Touch.Size(m)
}
func (m *Touch) XXX_DiscardUnknown() {
	xxx_messageInfo_Touch.DiscardUnknown(m)
}

var xxx_messageInfo_Touch proto.InternalMessageInfo

func (m *Touch) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Touch) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *Touch) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Touch) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Touch) GetCommand() *Command {
	if m != nil {
		return m.Command
	}
	return nil
}

type ScreenRequest struct {
	Line1                *Line    `protobuf:"bytes,1,opt,name=line1,proto3" json:"line1,omitempty"`
	Line2                *Line    `protobuf:"bytes,2,opt,name=line2,proto3" json:"line2,omitempty"`
	Line3                *Line    `protobuf:"bytes,3,opt,name=line3,proto3" json:"line3,omitempty"`
	Line4                *Line    `protobuf:"bytes,4,opt,name=line4,proto3" json:"line4,omitempty"`
	Line5                *Line    `protobuf:"bytes,5,opt,name=line5,proto3" json:"line5,omitempty"`
	Timeout              *Timeout `protobuf:"bytes,6,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Touches              []*Touch `protobuf:"bytes,7,rep,name=touches,proto3" json:"touches,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScreenRequest) Reset()         { *m = ScreenRequest{} }
func (m *ScreenRequest) String() string { return proto.CompactTextString(m) }
func (*ScreenRequest) ProtoMessage()    {}
func (*ScreenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_screenservice_c2d3bde5b6b2abe7, []int{4}
}
func (m *ScreenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScreenRequest.Unmarshal(m, b)
}
func (m *ScreenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScreenRequest.Marshal(b, m, deterministic)
}
func (dst *ScreenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScreenRequest.Merge(dst, src)
}
func (m *ScreenRequest) XXX_Size() int {
	return xxx_messageInfo_ScreenRequest.Size(m)
}
func (m *ScreenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ScreenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ScreenRequest proto.InternalMessageInfo

func (m *ScreenRequest) GetLine1() *Line {
	if m != nil {
		return m.Line1
	}
	return nil
}

func (m *ScreenRequest) GetLine2() *Line {
	if m != nil {
		return m.Line2
	}
	return nil
}

func (m *ScreenRequest) GetLine3() *Line {
	if m != nil {
		return m.Line3
	}
	return nil
}

func (m *ScreenRequest) GetLine4() *Line {
	if m != nil {
		return m.Line4
	}
	return nil
}

func (m *ScreenRequest) GetLine5() *Line {
	if m != nil {
		return m.Line5
	}
	return nil
}

func (m *ScreenRequest) GetTimeout() *Timeout {
	if m != nil {
		return m.Timeout
	}
	return nil
}

func (m *ScreenRequest) GetTouches() []*Touch {
	if m != nil {
		return m.Touches
	}
	return nil
}

type ScreenResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScreenResponse) Reset()         { *m = ScreenResponse{} }
func (m *ScreenResponse) String() string { return proto.CompactTextString(m) }
func (*ScreenResponse) ProtoMessage()    {}
func (*ScreenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_screenservice_c2d3bde5b6b2abe7, []int{5}
}
func (m *ScreenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScreenResponse.Unmarshal(m, b)
}
func (m *ScreenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScreenResponse.Marshal(b, m, deterministic)
}
func (dst *ScreenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScreenResponse.Merge(dst, src)
}
func (m *ScreenResponse) XXX_Size() int {
	return xxx_messageInfo_ScreenResponse.Size(m)
}
func (m *ScreenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ScreenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ScreenResponse proto.InternalMessageInfo

func (m *ScreenResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ScreenResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ScreenImage struct {
	ImageData            []byte   `protobuf:"bytes,1,opt,name=image_data,json=imageData,proto3" json:"image_data,omitempty"`
	Height               int32    `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Width                int32    `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Frame                int64    `protobuf:"varint,4,opt,name=frame,proto3" json:"frame,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScreenImage) Reset()         { *m = ScreenImage{} }
func (m *ScreenImage) String() string { return proto.CompactTextString(m) }
func (*ScreenImage) ProtoMessage()    {}
func (*ScreenImage) Descriptor() ([]byte, []int) {
	return fileDescriptor_screenservice_c2d3bde5b6b2abe7, []int{6}
}
func (m *ScreenImage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScreenImage.Unmarshal(m, b)
}
func (m *ScreenImage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScreenImage.Marshal(b, m, deterministic)
}
func (dst *ScreenImage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScreenImage.Merge(dst, src)
}
func (m *ScreenImage) XXX_Size() int {
	return xxx_messageInfo_ScreenImage.Size(m)
}
func (m *ScreenImage) XXX_DiscardUnknown() {
	xxx_messageInfo_ScreenImage.DiscardUnknown(m)
}

var xxx_messageInfo_ScreenImage proto.InternalMessageInfo

func (m *ScreenImage) GetImageData() []byte {
	if m != nil {
		return m.ImageData
	}
	return nil
}

func (m *ScreenImage) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ScreenImage) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *ScreenImage) GetFrame() int64 {
	if m != nil {
		return m.Frame
	}
	return 0
}

func init() {
	proto.RegisterType((*Line)(nil), "screenservice.Line")
	proto.RegisterType((*Timeout)(nil), "screenservice.Timeout")
	proto.RegisterType((*Command)(nil), "screenservice.Command")
	proto.RegisterType((*Touch)(nil), "screenservice.Touch")
	proto.RegisterType((*ScreenRequest)(nil), "screenservice.ScreenRequest")
	proto.RegisterType((*ScreenResponse)(nil), "screenservice.ScreenResponse")
	proto.RegisterType((*ScreenImage)(nil), "screenservice.ScreenImage")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ScreenServerClient is the client API for ScreenServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ScreenServerClient interface {
	SendScreen(ctx context.Context, in *ScreenRequest, opts ...grpc.CallOption) (*ScreenResponse, error)
	SendImage(ctx context.Context, in *ScreenImage, opts ...grpc.CallOption) (*ScreenResponse, error)
}

type screenServerClient struct {
	cc *grpc.ClientConn
}

func NewScreenServerClient(cc *grpc.ClientConn) ScreenServerClient {
	return &screenServerClient{cc}
}

func (c *screenServerClient) SendScreen(ctx context.Context, in *ScreenRequest, opts ...grpc.CallOption) (*ScreenResponse, error) {
	out := new(ScreenResponse)
	err := c.cc.Invoke(ctx, "/screenservice.ScreenServer/SendScreen", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *screenServerClient) SendImage(ctx context.Context, in *ScreenImage, opts ...grpc.CallOption) (*ScreenResponse, error) {
	out := new(ScreenResponse)
	err := c.cc.Invoke(ctx, "/screenservice.ScreenServer/SendImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ScreenServerServer is the server API for ScreenServer service.
type ScreenServerServer interface {
	SendScreen(context.Context, *ScreenRequest) (*ScreenResponse, error)
	SendImage(context.Context, *ScreenImage) (*ScreenResponse, error)
}

func RegisterScreenServerServer(s *grpc.Server, srv ScreenServerServer) {
	s.RegisterService(&_ScreenServer_serviceDesc, srv)
}

func _ScreenServer_SendScreen_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScreenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScreenServerServer).SendScreen(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/screenservice.ScreenServer/SendScreen",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScreenServerServer).SendScreen(ctx, req.(*ScreenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ScreenServer_SendImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScreenImage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScreenServerServer).SendImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/screenservice.ScreenServer/SendImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScreenServerServer).SendImage(ctx, req.(*ScreenImage))
	}
	return interceptor(ctx, in, info, handler)
}

var _ScreenServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "screenservice.ScreenServer",
	HandlerType: (*ScreenServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendScreen",
			Handler:    _ScreenServer_SendScreen_Handler,
		},
		{
			MethodName: "SendImage",
			Handler:    _ScreenServer_SendImage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "screenservice.proto",
}

func init() { proto.RegisterFile("screenservice.proto", fileDescriptor_screenservice_c2d3bde5b6b2abe7) }

var fileDescriptor_screenservice_c2d3bde5b6b2abe7 = []byte{
	// 487 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x54, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xc5, 0x4d, 0x1d, 0x93, 0x71, 0xca, 0x61, 0x1b, 0x55, 0x56, 0xa1, 0x52, 0xe4, 0x53, 0xb8,
	0x44, 0xe0, 0xb4, 0x7f, 0xa0, 0x70, 0x00, 0x81, 0x84, 0xb4, 0x89, 0xb8, 0x56, 0x4b, 0x32, 0xd8,
	0x96, 0xe2, 0x0f, 0xbc, 0xeb, 0xb4, 0x39, 0xf3, 0x5b, 0xf8, 0x2f, 0xfc, 0x2c, 0xb4, 0xb3, 0xbb,
	0x92, 0x1d, 0xa5, 0xe1, 0xe6, 0x79, 0xf3, 0xf2, 0x76, 0xde, 0xcc, 0x53, 0xe0, 0x52, 0xae, 0x1b,
	0xc4, 0x52, 0x62, 0xb3, 0xcb, 0xd7, 0x38, 0xaf, 0x9b, 0x4a, 0x55, 0xec, 0xa2, 0x07, 0xc6, 0xf7,
	0x70, 0xfe, 0x35, 0x2f, 0x91, 0xbd, 0x86, 0xd1, 0x36, 0x2f, 0xf1, 0x41, 0xed, 0x6b, 0x8c, 0xbc,
	0xa9, 0x37, 0x1b, 0xf1, 0x97, 0x1a, 0x58, 0xed, 0x6b, 0x64, 0x37, 0x00, 0xd4, 0xdc, 0x89, 0x6d,
	0x8b, 0xd1, 0x19, 0x75, 0x89, 0xfe, 0x5d, 0x03, 0x71, 0x0a, 0xc1, 0x2a, 0x2f, 0xb0, 0x6a, 0x15,
	0xbb, 0x82, 0xe1, 0x16, 0xcb, 0x54, 0x65, 0xa4, 0xe1, 0x73, 0x5b, 0xb1, 0x29, 0x84, 0x32, 0xab,
	0x1e, 0x95, 0xa1, 0x91, 0x84, 0xcf, 0xbb, 0x10, 0x8b, 0x61, 0xdc, 0xa0, 0x6a, 0x9b, 0xd2, 0xcc,
	0x17, 0x0d, 0xe8, 0x95, 0x1e, 0x16, 0x7f, 0x83, 0xe0, 0x43, 0x55, 0x14, 0xa2, 0xdc, 0x68, 0xc1,
	0xb5, 0xf9, 0xec, 0x4c, 0xdc, 0x85, 0xb4, 0xa0, 0x2d, 0xbb, 0x63, 0xf7, 0xb0, 0xf8, 0xb7, 0x07,
	0xfe, 0xaa, 0x6a, 0xd7, 0x19, 0x1b, 0x83, 0xf7, 0x64, 0x67, 0xf6, 0x9e, 0x74, 0xb5, 0xb7, 0x43,
	0x7a, 0x7b, 0x36, 0x01, 0xff, 0x31, 0xdf, 0xa8, 0x8c, 0x66, 0xf2, 0xb9, 0x29, 0xb4, 0xd5, 0x0c,
	0xf3, 0x34, 0x53, 0xd1, 0xb9, 0xb1, 0x6a, 0x2a, 0xf6, 0x0e, 0x02, 0xfb, 0x46, 0xe4, 0x4f, 0xbd,
	0x59, 0x98, 0x5c, 0xcd, 0xfb, 0x77, 0xb0, 0x16, 0xb8, 0xa3, 0xc5, 0x7f, 0xcf, 0xe0, 0x62, 0x49,
	0x14, 0x8e, 0xbf, 0x5a, 0x94, 0x8a, 0xbd, 0x05, 0x5f, 0xaf, 0xf7, 0x3d, 0x4d, 0x14, 0x26, 0x97,
	0x07, 0x0a, 0xfa, 0x62, 0xdc, 0x30, 0x1c, 0x35, 0xa1, 0x71, 0x4f, 0x51, 0x13, 0x47, 0x5d, 0x90,
	0x8f, 0x53, 0xd4, 0x85, 0xa3, 0xde, 0x92, 0xb7, 0x53, 0xd4, 0x5b, 0x47, 0xbd, 0xb3, 0x6e, 0x9f,
	0xa7, 0xde, 0xe9, 0xd5, 0xb8, 0x04, 0x0c, 0x8f, 0xae, 0xc6, 0xc6, 0x88, 0x3b, 0x1a, 0x9b, 0x43,
	0xa0, 0xf4, 0x7d, 0x50, 0x46, 0xc1, 0x74, 0x30, 0x0b, 0x93, 0xc9, 0xe1, 0x2f, 0x74, 0x97, 0x3b,
	0x52, 0x7c, 0x0f, 0xaf, 0xdc, 0x26, 0x65, 0x5d, 0x95, 0x12, 0xf5, 0x99, 0xa4, 0x12, 0xaa, 0x95,
	0x36, 0x23, 0xb6, 0x62, 0x11, 0x04, 0x05, 0x4a, 0x29, 0x52, 0x97, 0x0c, 0x57, 0xc6, 0x35, 0x84,
	0x46, 0xe3, 0x73, 0x21, 0x52, 0x0a, 0x7f, 0xae, 0x3f, 0x1e, 0x36, 0x42, 0x09, 0x12, 0x19, 0xf3,
	0x11, 0x21, 0x1f, 0x85, 0x12, 0x9d, 0x18, 0x9c, 0xf5, 0x62, 0x70, 0x3c, 0x34, 0x13, 0xf0, 0x7f,
	0x36, 0xa2, 0x40, 0xda, 0xeb, 0x80, 0x9b, 0x22, 0xf9, 0xe3, 0xc1, 0xd8, 0x3c, 0xb9, 0xc4, 0x66,
	0x87, 0x0d, 0xfb, 0x02, 0xb0, 0xc4, 0x72, 0x63, 0x30, 0xf6, 0xe6, 0xc0, 0x73, 0x2f, 0x2b, 0xd7,
	0x37, 0xcf, 0x74, 0x8d, 0xff, 0xf8, 0x05, 0xfb, 0x04, 0x23, 0x2d, 0x66, 0xdc, 0x5c, 0x1f, 0x65,
	0x53, 0xef, 0xbf, 0x4a, 0x3f, 0x86, 0xf4, 0x17, 0xb2, 0xf8, 0x17, 0x00, 0x00, 0xff, 0xff, 0x53,
	0x26, 0x3c, 0x5d, 0x59, 0x04, 0x00, 0x00,
}
